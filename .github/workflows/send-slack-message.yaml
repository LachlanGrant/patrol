name: send slack message

on:
  workflow_call:
    inputs:
      SLACK_MESSAGE_TITLE:
        required: true
        type: string
      TESTS_EXIT_CODE:
        required: false
        type: string
      FAILURE_STATUS:
        required: false
        type: string
      ERROR_STATUS:
        required: false
        type: string
      EXCLUDED_TESTS:
        required: false
        type: string
      URL_TO_DETAILS:
        required: false
        type: string
      TEST_RUN_ID:
        required: true
        type: string

jobs:
  send_slack_message:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      # Error means that something went wrong during workflow
      # and because of that tests didn't run, so TESTS_EXIT_CODE isn't set
      - name: Check if error or failed test occured during run
        run: >
          if [ -z ${{ inputs.TESTS_EXIT_CODE }} ] || [ -n "${{ inputs.ERROR_STATUS }}" ]; then
            echo "error_status=error" >> "$GITHUB_ENV";
          elif [ ! ${{ inputs.TESTS_EXIT_CODE }} == 0 ] || [ -n "${{ inputs.FAILURE_STATUS }}" ]; then
            echo "failure_status=failure" >> "$GITHUB_ENV";
          fi;

      - name: Set Slack message
        id: slack_message
        run: >
          if [ -n "$error_status" ]; then
            message="Something went wrong ⚠️ ";
            status="failure";
          fi;
          if [ -n "$failure_status" ]; then
            if [ -n "$message" ]; then
              message+=" and there were failing tests 💥 ";
            else
              message+="There were failing tests 💥 ";
              status="failure";
            fi;
          fi;
          if [ -z "$message" ]; then
              message="All tests have passed ✅ ";
              status="success";
          fi;
          
          run_url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}";

          if [ -z "${{ inputs.URL_TO_DETAILS }}" ]; then
            echo "url_to_details=$run_url" >> $GITHUB_OUTPUT;
          else
            echo "url_to_details=${{ inputs.URL_TO_DETAILS }}" >> $GITHUB_OUTPUT;
          fi;

          echo "message=$message" >> $GITHUB_OUTPUT;
          echo "run_url=$run_url" >> $GITHUB_OUTPUT;
          echo "status=$status" >> $GITHUB_OUTPUT;
      
      - name: Add excluded tests to message
        env:
          EXCLUDED_TESTS: ${{ inputs.EXCLUDED_TESTS }}
        run: |
          if [ -n "$EXCLUDED_TESTS" ]; then
            EXCLUDED_TESTS=$(echo "$EXCLUDED_TESTS" | tr ',' '\n')
            EXCLUDED_TESTS=$(printf ' • %s\n' $EXCLUDED_TESTS)
            echo "excluded_tests<<EOF" >> $GITHUB_ENV
            echo "Excluded tests:" >> $GITHUB_ENV
            echo "$EXCLUDED_TESTS" >> $GITHUB_ENV
            echo EOF >> $GITHUB_ENV
          fi;

      - name: Get failed tests from artifacts
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          run_id: ${{ inputs.TEST_RUN_ID}}
          if_no_artifact_found: ignore

      - name: Add failed tests to message from artifacts
        run: |
          # TODO: remove duplicates in failed_tests_.*
          # TODO: write failed_tests_.* to $GITHUB_ENV

      - name: Remove failed tests from artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: failed_tests_*
          failOnError: false

      - name: Share test results on Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ${{ vars.SLACK_STATUS_CHANNEL }}
          SLACK_USERNAME: Patrol CI on GitHub Actions
          SLACK_COLOR: ${{ steps.slack_message.outputs.status }}
          SLACK_ICON: ${{ vars.SLACK_ICON }}
          SLACK_TITLE: ${{ inputs.SLACK_MESSAGE_TITLE }}
          SLACK_MESSAGE: |
            ${{ steps.slack_message.outputs.message }}

            <${{ steps.slack_message.outputs.run_url }}|See workflow run>

            <${{ steps.slack_message.outputs.url_to_details }}|See tests details>
            
            ${{ env.excluded_tests }}
